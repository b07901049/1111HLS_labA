// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.242000,HLS_SYN_LAT=10,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=979,HLS_SYN_LUT=2317,HLS_VERSION=2022_1}" *)

module array_io (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_0_address0,
        d_o_0_ce0,
        d_o_0_we0,
        d_o_0_d0,
        d_o_0_address1,
        d_o_0_ce1,
        d_o_0_we1,
        d_o_0_d1,
        d_o_1_address0,
        d_o_1_ce0,
        d_o_1_we0,
        d_o_1_d0,
        d_o_1_address1,
        d_o_1_ce1,
        d_o_1_we1,
        d_o_1_d1,
        d_o_2_address0,
        d_o_2_ce0,
        d_o_2_we0,
        d_o_2_d0,
        d_o_2_address1,
        d_o_2_ce1,
        d_o_2_we1,
        d_o_2_d1,
        d_o_3_address0,
        d_o_3_ce0,
        d_o_3_we0,
        d_o_3_d0,
        d_o_3_address1,
        d_o_3_ce1,
        d_o_3_we1,
        d_o_3_d1,
        d_i_0_address0,
        d_i_0_ce0,
        d_i_0_q0,
        d_i_0_address1,
        d_i_0_ce1,
        d_i_0_q1,
        d_i_1_address0,
        d_i_1_ce0,
        d_i_1_q0,
        d_i_1_address1,
        d_i_1_ce1,
        d_i_1_q1
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] d_o_0_address0;
output   d_o_0_ce0;
output   d_o_0_we0;
output  [15:0] d_o_0_d0;
output  [2:0] d_o_0_address1;
output   d_o_0_ce1;
output   d_o_0_we1;
output  [15:0] d_o_0_d1;
output  [2:0] d_o_1_address0;
output   d_o_1_ce0;
output   d_o_1_we0;
output  [15:0] d_o_1_d0;
output  [2:0] d_o_1_address1;
output   d_o_1_ce1;
output   d_o_1_we1;
output  [15:0] d_o_1_d1;
output  [2:0] d_o_2_address0;
output   d_o_2_ce0;
output   d_o_2_we0;
output  [15:0] d_o_2_d0;
output  [2:0] d_o_2_address1;
output   d_o_2_ce1;
output   d_o_2_we1;
output  [15:0] d_o_2_d1;
output  [2:0] d_o_3_address0;
output   d_o_3_ce0;
output   d_o_3_we0;
output  [15:0] d_o_3_d0;
output  [2:0] d_o_3_address1;
output   d_o_3_ce1;
output   d_o_3_we1;
output  [15:0] d_o_3_d1;
output  [3:0] d_i_0_address0;
output   d_i_0_ce0;
input  [15:0] d_i_0_q0;
output  [3:0] d_i_0_address1;
output   d_i_0_ce1;
input  [15:0] d_i_0_q1;
output  [3:0] d_i_1_address0;
output   d_i_1_ce0;
input  [15:0] d_i_1_q0;
output  [3:0] d_i_1_address1;
output   d_i_1_ce1;
input  [15:0] d_i_1_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] d_o_0_address0;
reg d_o_0_ce0;
reg d_o_0_we0;
reg[15:0] d_o_0_d0;
reg[2:0] d_o_0_address1;
reg d_o_0_ce1;
reg d_o_0_we1;
reg[15:0] d_o_0_d1;
reg[2:0] d_o_1_address0;
reg d_o_1_ce0;
reg d_o_1_we0;
reg[15:0] d_o_1_d0;
reg[2:0] d_o_1_address1;
reg d_o_1_ce1;
reg d_o_1_we1;
reg[15:0] d_o_1_d1;
reg[2:0] d_o_2_address0;
reg d_o_2_ce0;
reg d_o_2_we0;
reg[15:0] d_o_2_d0;
reg[2:0] d_o_2_address1;
reg d_o_2_ce1;
reg d_o_2_we1;
reg[15:0] d_o_2_d1;
reg[2:0] d_o_3_address0;
reg d_o_3_ce0;
reg d_o_3_we0;
reg[15:0] d_o_3_d0;
reg[2:0] d_o_3_address1;
reg d_o_3_ce1;
reg d_o_3_we1;
reg[15:0] d_o_3_d1;
reg[3:0] d_i_0_address0;
reg d_i_0_ce0;
reg[3:0] d_i_0_address1;
reg d_i_0_ce1;
reg[3:0] d_i_1_address0;
reg d_i_1_ce0;
reg[3:0] d_i_1_address1;
reg d_i_1_ce1;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg  signed [15:0] reg_706;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg  signed [15:0] reg_710;
reg  signed [15:0] reg_714;
reg  signed [15:0] reg_718;
reg  signed [15:0] d_i_0_load_2_reg_1414;
wire    ap_CS_fsm_state3;
reg  signed [15:0] d_i_0_load_3_reg_1420;
reg  signed [15:0] d_i_1_load_2_reg_1436;
reg  signed [15:0] d_i_1_load_3_reg_1442;
reg  signed [15:0] d_i_0_load_4_reg_1458;
wire    ap_CS_fsm_state4;
reg  signed [15:0] d_i_0_load_5_reg_1464;
reg  signed [15:0] d_i_1_load_4_reg_1480;
reg  signed [15:0] d_i_1_load_5_reg_1486;
reg  signed [15:0] d_i_0_load_6_reg_1502;
wire    ap_CS_fsm_state5;
reg  signed [15:0] d_i_0_load_7_reg_1508;
reg  signed [15:0] d_i_1_load_6_reg_1524;
reg  signed [15:0] d_i_1_load_7_reg_1530;
reg  signed [15:0] d_i_0_load_8_reg_1552;
wire    ap_CS_fsm_state6;
wire   [15:0] add_ln69_8_fu_752_p2;
reg   [15:0] add_ln69_8_reg_1557;
reg  signed [15:0] d_i_0_load_9_reg_1563;
wire   [15:0] add_ln69_9_fu_758_p2;
reg   [15:0] add_ln69_9_reg_1568;
reg  signed [15:0] d_i_1_load_8_reg_1584;
wire   [16:0] add_ln67_1_fu_776_p2;
reg   [16:0] add_ln67_1_reg_1589;
reg  signed [15:0] d_i_1_load_9_reg_1594;
wire   [16:0] add_ln67_5_fu_786_p2;
reg   [16:0] add_ln67_5_reg_1599;
wire   [15:0] add_ln69_10_fu_834_p2;
reg   [15:0] add_ln69_10_reg_1620;
wire   [15:0] add_ln69_11_fu_840_p2;
reg   [15:0] add_ln69_11_reg_1626;
wire   [15:0] add_ln69_24_fu_894_p2;
reg   [15:0] add_ln69_24_reg_1642;
wire   [15:0] add_ln69_25_fu_929_p2;
reg   [15:0] add_ln69_25_reg_1647;
wire   [16:0] add_ln67_9_fu_938_p2;
reg   [16:0] add_ln67_9_reg_1652;
wire   [16:0] add_ln67_13_fu_948_p2;
reg   [16:0] add_ln67_13_reg_1657;
wire   [15:0] add_ln69_12_fu_996_p2;
reg   [15:0] add_ln69_12_reg_1678;
wire   [15:0] add_ln69_13_fu_1002_p2;
reg   [15:0] add_ln69_13_reg_1684;
wire   [15:0] add_ln69_26_fu_1054_p2;
reg   [15:0] add_ln69_26_reg_1700;
wire   [15:0] add_ln69_27_fu_1090_p2;
reg   [15:0] add_ln69_27_reg_1705;
wire   [16:0] add_ln67_17_fu_1100_p2;
reg   [16:0] add_ln67_17_reg_1710;
wire   [16:0] add_ln67_21_fu_1110_p2;
reg   [16:0] add_ln67_21_reg_1715;
wire   [15:0] add_ln69_14_fu_1158_p2;
reg   [15:0] add_ln69_14_reg_1736;
wire   [15:0] add_ln69_15_fu_1164_p2;
reg   [15:0] add_ln69_15_reg_1742;
wire   [15:0] add_ln69_28_fu_1216_p2;
reg   [15:0] add_ln69_28_reg_1748;
wire   [15:0] add_ln69_29_fu_1252_p2;
reg   [15:0] add_ln69_29_reg_1753;
wire   [16:0] add_ln67_25_fu_1262_p2;
reg   [16:0] add_ln67_25_reg_1758;
wire   [16:0] add_ln67_29_fu_1272_p2;
reg   [16:0] add_ln67_29_reg_1763;
wire   [15:0] add_ln69_30_fu_1332_p2;
reg   [15:0] add_ln69_30_reg_1768;
wire    ap_CS_fsm_state10;
wire   [15:0] add_ln69_31_fu_1368_p2;
reg   [15:0] add_ln69_31_reg_1773;
wire    ap_CS_fsm_state11;
wire   [31:0] temp_fu_882_p2;
wire   [31:0] temp_1_fu_917_p2;
wire   [31:0] temp_2_fu_1042_p2;
wire   [31:0] temp_3_fu_1078_p2;
wire   [31:0] temp_4_fu_1204_p2;
wire   [31:0] temp_5_fu_1240_p2;
wire   [31:0] temp_6_fu_1320_p2;
wire   [31:0] temp_7_fu_1356_p2;
wire   [15:0] add_ln69_fu_730_p2;
wire   [15:0] add_ln69_1_fu_745_p2;
wire   [15:0] add_ln69_2_fu_808_p2;
wire   [15:0] add_ln69_3_fu_822_p2;
wire   [15:0] add_ln69_4_fu_968_p2;
wire   [15:0] add_ln69_5_fu_982_p2;
wire   [15:0] add_ln69_6_fu_1130_p2;
wire   [15:0] add_ln69_7_fu_1144_p2;
wire   [15:0] add_ln69_16_fu_846_p2;
wire   [15:0] add_ln69_17_fu_852_p2;
wire   [15:0] add_ln69_18_fu_1008_p2;
wire   [15:0] add_ln69_19_fu_1013_p2;
wire   [15:0] add_ln69_20_fu_1170_p2;
wire   [15:0] add_ln69_21_fu_1175_p2;
wire   [15:0] add_ln69_22_fu_1292_p2;
wire   [15:0] add_ln69_23_fu_1297_p2;
wire   [15:0] trunc_ln67_fu_726_p1;
wire   [15:0] trunc_ln67_1_fu_741_p1;
wire  signed [15:0] add_ln69_8_fu_752_p0;
wire  signed [15:0] add_ln69_9_fu_758_p0;
wire  signed [15:0] sext_ln67_8_fu_772_p0;
wire  signed [16:0] sext_ln69_8_fu_764_p1;
wire  signed [16:0] sext_ln67_8_fu_772_p1;
wire  signed [15:0] sext_ln67_11_fu_782_p0;
wire  signed [16:0] sext_ln69_9_fu_768_p1;
wire  signed [16:0] sext_ln67_11_fu_782_p1;
wire   [15:0] trunc_ln67_2_fu_804_p1;
wire   [15:0] trunc_ln67_3_fu_818_p1;
wire  signed [15:0] add_ln69_10_fu_834_p0;
wire  signed [15:0] add_ln69_11_fu_840_p0;
wire  signed [31:0] sext_ln67_fu_792_p1;
wire  signed [17:0] sext_ln67_9_fu_869_p1;
wire  signed [17:0] sext_ln69_fu_828_p1;
wire   [17:0] add_ln67_2_fu_872_p2;
wire  signed [31:0] sext_ln67_10_fu_878_p1;
wire   [31:0] add_ln67_fu_864_p2;
wire  signed [31:0] sext_ln67_1_fu_796_p1;
wire  signed [17:0] sext_ln67_12_fu_904_p1;
wire  signed [17:0] sext_ln69_1_fu_831_p1;
wire   [17:0] add_ln67_6_fu_907_p2;
wire  signed [31:0] sext_ln67_13_fu_913_p1;
wire   [31:0] add_ln67_4_fu_899_p2;
wire  signed [15:0] sext_ln67_14_fu_934_p0;
wire  signed [16:0] sext_ln69_10_fu_858_p1;
wire  signed [16:0] sext_ln67_14_fu_934_p1;
wire  signed [15:0] sext_ln67_17_fu_944_p0;
wire  signed [16:0] sext_ln69_11_fu_861_p1;
wire  signed [16:0] sext_ln67_17_fu_944_p1;
wire   [15:0] trunc_ln67_4_fu_964_p1;
wire   [15:0] trunc_ln67_5_fu_978_p1;
wire  signed [15:0] add_ln69_12_fu_996_p0;
wire  signed [15:0] add_ln69_13_fu_1002_p0;
wire  signed [31:0] sext_ln67_2_fu_954_p1;
wire  signed [17:0] sext_ln67_15_fu_1029_p1;
wire  signed [17:0] sext_ln69_2_fu_988_p1;
wire   [17:0] add_ln67_10_fu_1032_p2;
wire  signed [31:0] sext_ln67_16_fu_1038_p1;
wire   [31:0] add_ln67_8_fu_1024_p2;
wire  signed [31:0] sext_ln67_3_fu_957_p1;
wire  signed [17:0] sext_ln67_18_fu_1065_p1;
wire  signed [17:0] sext_ln69_3_fu_992_p1;
wire   [17:0] add_ln67_14_fu_1068_p2;
wire  signed [31:0] sext_ln67_19_fu_1074_p1;
wire   [31:0] add_ln67_12_fu_1060_p2;
wire  signed [15:0] sext_ln67_20_fu_1096_p0;
wire  signed [16:0] sext_ln69_12_fu_1018_p1;
wire  signed [16:0] sext_ln67_20_fu_1096_p1;
wire  signed [15:0] sext_ln67_23_fu_1106_p0;
wire  signed [16:0] sext_ln69_13_fu_1021_p1;
wire  signed [16:0] sext_ln67_23_fu_1106_p1;
wire   [15:0] trunc_ln67_6_fu_1126_p1;
wire   [15:0] trunc_ln67_7_fu_1140_p1;
wire  signed [15:0] add_ln69_14_fu_1158_p0;
wire  signed [15:0] add_ln69_15_fu_1164_p0;
wire  signed [31:0] sext_ln67_4_fu_1116_p1;
wire  signed [17:0] sext_ln67_21_fu_1191_p1;
wire  signed [17:0] sext_ln69_4_fu_1150_p1;
wire   [17:0] add_ln67_18_fu_1194_p2;
wire  signed [31:0] sext_ln67_22_fu_1200_p1;
wire   [31:0] add_ln67_16_fu_1186_p2;
wire  signed [31:0] sext_ln67_5_fu_1119_p1;
wire  signed [17:0] sext_ln67_24_fu_1227_p1;
wire  signed [17:0] sext_ln69_5_fu_1154_p1;
wire   [17:0] add_ln67_22_fu_1230_p2;
wire  signed [31:0] sext_ln67_25_fu_1236_p1;
wire   [31:0] add_ln67_20_fu_1222_p2;
wire  signed [15:0] sext_ln67_26_fu_1258_p0;
wire  signed [16:0] sext_ln69_14_fu_1180_p1;
wire  signed [16:0] sext_ln67_26_fu_1258_p1;
wire  signed [15:0] sext_ln67_29_fu_1268_p0;
wire  signed [16:0] sext_ln69_15_fu_1183_p1;
wire  signed [16:0] sext_ln67_29_fu_1268_p1;
wire  signed [31:0] sext_ln67_6_fu_1278_p1;
wire  signed [17:0] sext_ln67_27_fu_1307_p1;
wire  signed [17:0] sext_ln69_6_fu_1284_p1;
wire   [17:0] add_ln67_26_fu_1310_p2;
wire  signed [31:0] sext_ln67_28_fu_1316_p1;
wire   [31:0] add_ln67_24_fu_1302_p2;
wire  signed [31:0] sext_ln67_7_fu_1281_p1;
wire  signed [17:0] sext_ln67_30_fu_1343_p1;
wire  signed [17:0] sext_ln69_7_fu_1288_p1;
wire   [17:0] add_ln67_30_fu_1346_p2;
wire  signed [31:0] sext_ln67_31_fu_1352_p1;
wire   [31:0] add_ln67_28_fu_1338_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_0 <= temp_fu_882_p2;
        acc_1 <= temp_1_fu_917_p2;
        add_ln67_13_reg_1657 <= add_ln67_13_fu_948_p2;
        add_ln67_9_reg_1652 <= add_ln67_9_fu_938_p2;
        add_ln69_10_reg_1620 <= add_ln69_10_fu_834_p2;
        add_ln69_11_reg_1626 <= add_ln69_11_fu_840_p2;
        add_ln69_24_reg_1642 <= add_ln69_24_fu_894_p2;
        add_ln69_25_reg_1647 <= add_ln69_25_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_2 <= temp_2_fu_1042_p2;
        acc_3 <= temp_3_fu_1078_p2;
        add_ln67_17_reg_1710 <= add_ln67_17_fu_1100_p2;
        add_ln67_21_reg_1715 <= add_ln67_21_fu_1110_p2;
        add_ln69_12_reg_1678 <= add_ln69_12_fu_996_p2;
        add_ln69_13_reg_1684 <= add_ln69_13_fu_1002_p2;
        add_ln69_26_reg_1700 <= add_ln69_26_fu_1054_p2;
        add_ln69_27_reg_1705 <= add_ln69_27_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        acc_4 <= temp_4_fu_1204_p2;
        acc_5 <= temp_5_fu_1240_p2;
        add_ln67_25_reg_1758 <= add_ln67_25_fu_1262_p2;
        add_ln67_29_reg_1763 <= add_ln67_29_fu_1272_p2;
        add_ln69_14_reg_1736 <= add_ln69_14_fu_1158_p2;
        add_ln69_15_reg_1742 <= add_ln69_15_fu_1164_p2;
        add_ln69_28_reg_1748 <= add_ln69_28_fu_1216_p2;
        add_ln69_29_reg_1753 <= add_ln69_29_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        acc_6 <= temp_6_fu_1320_p2;
        acc_7 <= temp_7_fu_1356_p2;
        add_ln69_30_reg_1768 <= add_ln69_30_fu_1332_p2;
        add_ln69_31_reg_1773 <= add_ln69_31_fu_1368_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln67_1_reg_1589 <= add_ln67_1_fu_776_p2;
        add_ln67_5_reg_1599 <= add_ln67_5_fu_786_p2;
        add_ln69_8_reg_1557 <= add_ln69_8_fu_752_p2;
        add_ln69_9_reg_1568 <= add_ln69_9_fu_758_p2;
        d_i_0_load_8_reg_1552 <= d_i_0_q1;
        d_i_0_load_9_reg_1563 <= d_i_0_q0;
        d_i_1_load_8_reg_1584 <= d_i_1_q1;
        d_i_1_load_9_reg_1594 <= d_i_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_0_load_2_reg_1414 <= d_i_0_q1;
        d_i_0_load_3_reg_1420 <= d_i_0_q0;
        d_i_1_load_2_reg_1436 <= d_i_1_q1;
        d_i_1_load_3_reg_1442 <= d_i_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_0_load_4_reg_1458 <= d_i_0_q1;
        d_i_0_load_5_reg_1464 <= d_i_0_q0;
        d_i_1_load_4_reg_1480 <= d_i_1_q1;
        d_i_1_load_5_reg_1486 <= d_i_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_0_load_6_reg_1502 <= d_i_0_q1;
        d_i_0_load_7_reg_1508 <= d_i_0_q0;
        d_i_1_load_6_reg_1524 <= d_i_1_q1;
        d_i_1_load_7_reg_1530 <= d_i_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_706 <= d_i_0_q1;
        reg_710 <= d_i_0_q0;
        reg_714 <= d_i_1_q1;
        reg_718 <= d_i_1_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_0_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_0_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_0_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_0_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_0_address0 = 64'd1;
    end else begin
        d_i_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_0_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_0_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_0_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_0_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_0_address1 = 64'd0;
    end else begin
        d_i_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_0_ce0 = 1'b1;
    end else begin
        d_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_0_ce1 = 1'b1;
    end else begin
        d_i_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_1_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_1_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_1_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_1_address0 = 64'd1;
    end else begin
        d_i_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_1_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_1_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_1_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_1_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_1_address1 = 64'd0;
    end else begin
        d_i_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_1_ce0 = 1'b1;
    end else begin
        d_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        d_i_1_ce1 = 1'b1;
    end else begin
        d_i_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_0_address0 = 64'd1;
    end else begin
        d_o_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_0_address1 = 64'd0;
    end else begin
        d_o_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_0_ce0 = 1'b1;
    end else begin
        d_o_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_0_ce1 = 1'b1;
    end else begin
        d_o_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_0_d0 = add_ln69_7_fu_1144_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_0_d0 = add_ln69_5_fu_982_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_0_d0 = add_ln69_3_fu_822_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_0_d0 = add_ln69_1_fu_745_p2;
    end else begin
        d_o_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_0_d1 = add_ln69_6_fu_1130_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_0_d1 = add_ln69_4_fu_968_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_0_d1 = add_ln69_2_fu_808_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_0_d1 = add_ln69_fu_730_p2;
    end else begin
        d_o_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_0_we0 = 1'b1;
    end else begin
        d_o_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_0_we1 = 1'b1;
    end else begin
        d_o_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_1_address0 = 64'd1;
    end else begin
        d_o_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_1_address1 = 64'd0;
    end else begin
        d_o_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_1_ce0 = 1'b1;
    end else begin
        d_o_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_1_ce1 = 1'b1;
    end else begin
        d_o_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_1_d0 = add_ln69_15_reg_1742;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_1_d0 = add_ln69_13_reg_1684;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_1_d0 = add_ln69_11_reg_1626;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_1_d0 = add_ln69_9_reg_1568;
    end else begin
        d_o_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_1_d1 = add_ln69_14_reg_1736;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_1_d1 = add_ln69_12_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_1_d1 = add_ln69_10_reg_1620;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_1_d1 = add_ln69_8_reg_1557;
    end else begin
        d_o_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_1_we0 = 1'b1;
    end else begin
        d_o_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_1_we1 = 1'b1;
    end else begin
        d_o_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_2_address0 = 64'd1;
    end else begin
        d_o_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_2_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_2_address1 = 64'd0;
    end else begin
        d_o_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_2_ce0 = 1'b1;
    end else begin
        d_o_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_2_ce1 = 1'b1;
    end else begin
        d_o_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_2_d0 = add_ln69_23_fu_1297_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_2_d0 = add_ln69_21_fu_1175_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_2_d0 = add_ln69_19_fu_1013_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_2_d0 = add_ln69_17_fu_852_p2;
    end else begin
        d_o_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_2_d1 = add_ln69_22_fu_1292_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_2_d1 = add_ln69_20_fu_1170_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_2_d1 = add_ln69_18_fu_1008_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_2_d1 = add_ln69_16_fu_846_p2;
    end else begin
        d_o_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_2_we0 = 1'b1;
    end else begin
        d_o_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        d_o_2_we1 = 1'b1;
    end else begin
        d_o_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_3_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_3_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_3_address0 = 64'd1;
    end else begin
        d_o_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_3_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_3_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_3_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_3_address1 = 64'd0;
    end else begin
        d_o_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        d_o_3_ce0 = 1'b1;
    end else begin
        d_o_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        d_o_3_ce1 = 1'b1;
    end else begin
        d_o_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_3_d0 = add_ln69_31_reg_1773;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_3_d0 = add_ln69_29_reg_1753;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_3_d0 = add_ln69_27_reg_1705;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_3_d0 = add_ln69_25_reg_1647;
    end else begin
        d_o_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_3_d1 = add_ln69_30_reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_3_d1 = add_ln69_28_reg_1748;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_3_d1 = add_ln69_26_reg_1700;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_3_d1 = add_ln69_24_reg_1642;
    end else begin
        d_o_3_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        d_o_3_we0 = 1'b1;
    end else begin
        d_o_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        d_o_3_we1 = 1'b1;
    end else begin
        d_o_3_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_10_fu_1032_p2 = ($signed(sext_ln67_15_fu_1029_p1) + $signed(sext_ln69_2_fu_988_p1));

assign add_ln67_12_fu_1060_p2 = ($signed(acc_3) + $signed(sext_ln67_3_fu_957_p1));

assign add_ln67_13_fu_948_p2 = ($signed(sext_ln69_11_fu_861_p1) + $signed(sext_ln67_17_fu_944_p1));

assign add_ln67_14_fu_1068_p2 = ($signed(sext_ln67_18_fu_1065_p1) + $signed(sext_ln69_3_fu_992_p1));

assign add_ln67_16_fu_1186_p2 = ($signed(acc_4) + $signed(sext_ln67_4_fu_1116_p1));

assign add_ln67_17_fu_1100_p2 = ($signed(sext_ln69_12_fu_1018_p1) + $signed(sext_ln67_20_fu_1096_p1));

assign add_ln67_18_fu_1194_p2 = ($signed(sext_ln67_21_fu_1191_p1) + $signed(sext_ln69_4_fu_1150_p1));

assign add_ln67_1_fu_776_p2 = ($signed(sext_ln69_8_fu_764_p1) + $signed(sext_ln67_8_fu_772_p1));

assign add_ln67_20_fu_1222_p2 = ($signed(acc_5) + $signed(sext_ln67_5_fu_1119_p1));

assign add_ln67_21_fu_1110_p2 = ($signed(sext_ln69_13_fu_1021_p1) + $signed(sext_ln67_23_fu_1106_p1));

assign add_ln67_22_fu_1230_p2 = ($signed(sext_ln67_24_fu_1227_p1) + $signed(sext_ln69_5_fu_1154_p1));

assign add_ln67_24_fu_1302_p2 = ($signed(acc_6) + $signed(sext_ln67_6_fu_1278_p1));

assign add_ln67_25_fu_1262_p2 = ($signed(sext_ln69_14_fu_1180_p1) + $signed(sext_ln67_26_fu_1258_p1));

assign add_ln67_26_fu_1310_p2 = ($signed(sext_ln67_27_fu_1307_p1) + $signed(sext_ln69_6_fu_1284_p1));

assign add_ln67_28_fu_1338_p2 = ($signed(acc_7) + $signed(sext_ln67_7_fu_1281_p1));

assign add_ln67_29_fu_1272_p2 = ($signed(sext_ln69_15_fu_1183_p1) + $signed(sext_ln67_29_fu_1268_p1));

assign add_ln67_2_fu_872_p2 = ($signed(sext_ln67_9_fu_869_p1) + $signed(sext_ln69_fu_828_p1));

assign add_ln67_30_fu_1346_p2 = ($signed(sext_ln67_30_fu_1343_p1) + $signed(sext_ln69_7_fu_1288_p1));

assign add_ln67_4_fu_899_p2 = ($signed(acc_1) + $signed(sext_ln67_1_fu_796_p1));

assign add_ln67_5_fu_786_p2 = ($signed(sext_ln69_9_fu_768_p1) + $signed(sext_ln67_11_fu_782_p1));

assign add_ln67_6_fu_907_p2 = ($signed(sext_ln67_12_fu_904_p1) + $signed(sext_ln69_1_fu_831_p1));

assign add_ln67_8_fu_1024_p2 = ($signed(acc_2) + $signed(sext_ln67_2_fu_954_p1));

assign add_ln67_9_fu_938_p2 = ($signed(sext_ln69_10_fu_858_p1) + $signed(sext_ln67_14_fu_934_p1));

assign add_ln67_fu_864_p2 = ($signed(acc_0) + $signed(sext_ln67_fu_792_p1));

assign add_ln69_10_fu_834_p0 = d_i_0_q1;

assign add_ln69_10_fu_834_p2 = ($signed(add_ln69_10_fu_834_p0) + $signed(add_ln69_2_fu_808_p2));

assign add_ln69_11_fu_840_p0 = d_i_0_q0;

assign add_ln69_11_fu_840_p2 = ($signed(add_ln69_11_fu_840_p0) + $signed(add_ln69_3_fu_822_p2));

assign add_ln69_12_fu_996_p0 = d_i_0_q1;

assign add_ln69_12_fu_996_p2 = ($signed(add_ln69_12_fu_996_p0) + $signed(add_ln69_4_fu_968_p2));

assign add_ln69_13_fu_1002_p0 = d_i_0_q0;

assign add_ln69_13_fu_1002_p2 = ($signed(add_ln69_13_fu_1002_p0) + $signed(add_ln69_5_fu_982_p2));

assign add_ln69_14_fu_1158_p0 = d_i_0_q1;

assign add_ln69_14_fu_1158_p2 = ($signed(add_ln69_14_fu_1158_p0) + $signed(add_ln69_6_fu_1130_p2));

assign add_ln69_15_fu_1164_p0 = d_i_0_q0;

assign add_ln69_15_fu_1164_p2 = ($signed(add_ln69_15_fu_1164_p0) + $signed(add_ln69_7_fu_1144_p2));

assign add_ln69_16_fu_846_p2 = ($signed(reg_714) + $signed(add_ln69_8_reg_1557));

assign add_ln69_17_fu_852_p2 = ($signed(reg_718) + $signed(add_ln69_9_reg_1568));

assign add_ln69_18_fu_1008_p2 = ($signed(d_i_1_load_2_reg_1436) + $signed(add_ln69_10_reg_1620));

assign add_ln69_19_fu_1013_p2 = ($signed(d_i_1_load_3_reg_1442) + $signed(add_ln69_11_reg_1626));

assign add_ln69_1_fu_745_p2 = ($signed(reg_710) + $signed(trunc_ln67_1_fu_741_p1));

assign add_ln69_20_fu_1170_p2 = ($signed(d_i_1_load_4_reg_1480) + $signed(add_ln69_12_reg_1678));

assign add_ln69_21_fu_1175_p2 = ($signed(d_i_1_load_5_reg_1486) + $signed(add_ln69_13_reg_1684));

assign add_ln69_22_fu_1292_p2 = ($signed(d_i_1_load_6_reg_1524) + $signed(add_ln69_14_reg_1736));

assign add_ln69_23_fu_1297_p2 = ($signed(d_i_1_load_7_reg_1530) + $signed(add_ln69_15_reg_1742));

assign add_ln69_24_fu_894_p2 = ($signed(d_i_1_load_8_reg_1584) + $signed(add_ln69_16_fu_846_p2));

assign add_ln69_25_fu_929_p2 = ($signed(d_i_1_load_9_reg_1594) + $signed(add_ln69_17_fu_852_p2));

assign add_ln69_26_fu_1054_p2 = ($signed(reg_714) + $signed(add_ln69_18_fu_1008_p2));

assign add_ln69_27_fu_1090_p2 = ($signed(reg_718) + $signed(add_ln69_19_fu_1013_p2));

assign add_ln69_28_fu_1216_p2 = ($signed(reg_714) + $signed(add_ln69_20_fu_1170_p2));

assign add_ln69_29_fu_1252_p2 = ($signed(reg_718) + $signed(add_ln69_21_fu_1175_p2));

assign add_ln69_2_fu_808_p2 = ($signed(d_i_0_load_2_reg_1414) + $signed(trunc_ln67_2_fu_804_p1));

assign add_ln69_30_fu_1332_p2 = ($signed(reg_714) + $signed(add_ln69_22_fu_1292_p2));

assign add_ln69_31_fu_1368_p2 = ($signed(reg_718) + $signed(add_ln69_23_fu_1297_p2));

assign add_ln69_3_fu_822_p2 = ($signed(d_i_0_load_3_reg_1420) + $signed(trunc_ln67_3_fu_818_p1));

assign add_ln69_4_fu_968_p2 = ($signed(d_i_0_load_4_reg_1458) + $signed(trunc_ln67_4_fu_964_p1));

assign add_ln69_5_fu_982_p2 = ($signed(d_i_0_load_5_reg_1464) + $signed(trunc_ln67_5_fu_978_p1));

assign add_ln69_6_fu_1130_p2 = ($signed(d_i_0_load_6_reg_1502) + $signed(trunc_ln67_6_fu_1126_p1));

assign add_ln69_7_fu_1144_p2 = ($signed(d_i_0_load_7_reg_1508) + $signed(trunc_ln67_7_fu_1140_p1));

assign add_ln69_8_fu_752_p0 = d_i_0_q1;

assign add_ln69_8_fu_752_p2 = ($signed(add_ln69_8_fu_752_p0) + $signed(add_ln69_fu_730_p2));

assign add_ln69_9_fu_758_p0 = d_i_0_q0;

assign add_ln69_9_fu_758_p2 = ($signed(add_ln69_9_fu_758_p0) + $signed(add_ln69_1_fu_745_p2));

assign add_ln69_fu_730_p2 = ($signed(reg_706) + $signed(trunc_ln67_fu_726_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign sext_ln67_10_fu_878_p1 = $signed(add_ln67_2_fu_872_p2);

assign sext_ln67_11_fu_782_p0 = d_i_1_q0;

assign sext_ln67_11_fu_782_p1 = sext_ln67_11_fu_782_p0;

assign sext_ln67_12_fu_904_p1 = $signed(add_ln67_5_reg_1599);

assign sext_ln67_13_fu_913_p1 = $signed(add_ln67_6_fu_907_p2);

assign sext_ln67_14_fu_934_p0 = d_i_1_q1;

assign sext_ln67_14_fu_934_p1 = sext_ln67_14_fu_934_p0;

assign sext_ln67_15_fu_1029_p1 = $signed(add_ln67_9_reg_1652);

assign sext_ln67_16_fu_1038_p1 = $signed(add_ln67_10_fu_1032_p2);

assign sext_ln67_17_fu_944_p0 = d_i_1_q0;

assign sext_ln67_17_fu_944_p1 = sext_ln67_17_fu_944_p0;

assign sext_ln67_18_fu_1065_p1 = $signed(add_ln67_13_reg_1657);

assign sext_ln67_19_fu_1074_p1 = $signed(add_ln67_14_fu_1068_p2);

assign sext_ln67_1_fu_796_p1 = reg_710;

assign sext_ln67_20_fu_1096_p0 = d_i_1_q1;

assign sext_ln67_20_fu_1096_p1 = sext_ln67_20_fu_1096_p0;

assign sext_ln67_21_fu_1191_p1 = $signed(add_ln67_17_reg_1710);

assign sext_ln67_22_fu_1200_p1 = $signed(add_ln67_18_fu_1194_p2);

assign sext_ln67_23_fu_1106_p0 = d_i_1_q0;

assign sext_ln67_23_fu_1106_p1 = sext_ln67_23_fu_1106_p0;

assign sext_ln67_24_fu_1227_p1 = $signed(add_ln67_21_reg_1715);

assign sext_ln67_25_fu_1236_p1 = $signed(add_ln67_22_fu_1230_p2);

assign sext_ln67_26_fu_1258_p0 = d_i_1_q1;

assign sext_ln67_26_fu_1258_p1 = sext_ln67_26_fu_1258_p0;

assign sext_ln67_27_fu_1307_p1 = $signed(add_ln67_25_reg_1758);

assign sext_ln67_28_fu_1316_p1 = $signed(add_ln67_26_fu_1310_p2);

assign sext_ln67_29_fu_1268_p0 = d_i_1_q0;

assign sext_ln67_29_fu_1268_p1 = sext_ln67_29_fu_1268_p0;

assign sext_ln67_2_fu_954_p1 = d_i_0_load_2_reg_1414;

assign sext_ln67_30_fu_1343_p1 = $signed(add_ln67_29_reg_1763);

assign sext_ln67_31_fu_1352_p1 = $signed(add_ln67_30_fu_1346_p2);

assign sext_ln67_3_fu_957_p1 = d_i_0_load_3_reg_1420;

assign sext_ln67_4_fu_1116_p1 = d_i_0_load_4_reg_1458;

assign sext_ln67_5_fu_1119_p1 = d_i_0_load_5_reg_1464;

assign sext_ln67_6_fu_1278_p1 = d_i_0_load_6_reg_1502;

assign sext_ln67_7_fu_1281_p1 = d_i_0_load_7_reg_1508;

assign sext_ln67_8_fu_772_p0 = d_i_1_q1;

assign sext_ln67_8_fu_772_p1 = sext_ln67_8_fu_772_p0;

assign sext_ln67_9_fu_869_p1 = $signed(add_ln67_1_reg_1589);

assign sext_ln67_fu_792_p1 = reg_706;

assign sext_ln69_10_fu_858_p1 = d_i_1_load_2_reg_1436;

assign sext_ln69_11_fu_861_p1 = d_i_1_load_3_reg_1442;

assign sext_ln69_12_fu_1018_p1 = d_i_1_load_4_reg_1480;

assign sext_ln69_13_fu_1021_p1 = d_i_1_load_5_reg_1486;

assign sext_ln69_14_fu_1180_p1 = d_i_1_load_6_reg_1524;

assign sext_ln69_15_fu_1183_p1 = d_i_1_load_7_reg_1530;

assign sext_ln69_1_fu_831_p1 = d_i_0_load_9_reg_1563;

assign sext_ln69_2_fu_988_p1 = reg_706;

assign sext_ln69_3_fu_992_p1 = reg_710;

assign sext_ln69_4_fu_1150_p1 = reg_706;

assign sext_ln69_5_fu_1154_p1 = reg_710;

assign sext_ln69_6_fu_1284_p1 = reg_706;

assign sext_ln69_7_fu_1288_p1 = reg_710;

assign sext_ln69_8_fu_764_p1 = reg_714;

assign sext_ln69_9_fu_768_p1 = reg_718;

assign sext_ln69_fu_828_p1 = d_i_0_load_8_reg_1552;

assign temp_1_fu_917_p2 = ($signed(sext_ln67_13_fu_913_p1) + $signed(add_ln67_4_fu_899_p2));

assign temp_2_fu_1042_p2 = ($signed(sext_ln67_16_fu_1038_p1) + $signed(add_ln67_8_fu_1024_p2));

assign temp_3_fu_1078_p2 = ($signed(sext_ln67_19_fu_1074_p1) + $signed(add_ln67_12_fu_1060_p2));

assign temp_4_fu_1204_p2 = ($signed(sext_ln67_22_fu_1200_p1) + $signed(add_ln67_16_fu_1186_p2));

assign temp_5_fu_1240_p2 = ($signed(sext_ln67_25_fu_1236_p1) + $signed(add_ln67_20_fu_1222_p2));

assign temp_6_fu_1320_p2 = ($signed(sext_ln67_28_fu_1316_p1) + $signed(add_ln67_24_fu_1302_p2));

assign temp_7_fu_1356_p2 = ($signed(sext_ln67_31_fu_1352_p1) + $signed(add_ln67_28_fu_1338_p2));

assign temp_fu_882_p2 = ($signed(sext_ln67_10_fu_878_p1) + $signed(add_ln67_fu_864_p2));

assign trunc_ln67_1_fu_741_p1 = acc_1[15:0];

assign trunc_ln67_2_fu_804_p1 = acc_2[15:0];

assign trunc_ln67_3_fu_818_p1 = acc_3[15:0];

assign trunc_ln67_4_fu_964_p1 = acc_4[15:0];

assign trunc_ln67_5_fu_978_p1 = acc_5[15:0];

assign trunc_ln67_6_fu_1126_p1 = acc_6[15:0];

assign trunc_ln67_7_fu_1140_p1 = acc_7[15:0];

assign trunc_ln67_fu_726_p1 = acc_0[15:0];

endmodule //array_io
