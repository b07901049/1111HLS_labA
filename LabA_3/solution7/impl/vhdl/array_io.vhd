-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_0_ce0 : OUT STD_LOGIC;
    d_o_0_we0 : OUT STD_LOGIC;
    d_o_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_0_ce1 : OUT STD_LOGIC;
    d_o_0_we1 : OUT STD_LOGIC;
    d_o_0_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_1_ce0 : OUT STD_LOGIC;
    d_o_1_we0 : OUT STD_LOGIC;
    d_o_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_1_ce1 : OUT STD_LOGIC;
    d_o_1_we1 : OUT STD_LOGIC;
    d_o_1_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_2_ce0 : OUT STD_LOGIC;
    d_o_2_we0 : OUT STD_LOGIC;
    d_o_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_2_ce1 : OUT STD_LOGIC;
    d_o_2_we1 : OUT STD_LOGIC;
    d_o_2_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_3_ce0 : OUT STD_LOGIC;
    d_o_3_we0 : OUT STD_LOGIC;
    d_o_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_o_3_ce1 : OUT STD_LOGIC;
    d_o_3_we1 : OUT STD_LOGIC;
    d_o_3_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce1 : OUT STD_LOGIC;
    d_i_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce1 : OUT STD_LOGIC;
    d_i_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.242000,HLS_SYN_LAT=10,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=979,HLS_SYN_LUT=2317,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_706 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal reg_710 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_714 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_718 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_2_reg_1414 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal d_i_0_load_3_reg_1420 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_2_reg_1436 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_3_reg_1442 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_4_reg_1458 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal d_i_0_load_5_reg_1464 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_4_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_5_reg_1486 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_6_reg_1502 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal d_i_0_load_7_reg_1508 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_6_reg_1524 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_7_reg_1530 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_8_reg_1552 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln69_8_fu_752_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_reg_1557 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_9_reg_1563 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_758_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_reg_1568 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_8_reg_1584 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_1_fu_776_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_1_reg_1589 : STD_LOGIC_VECTOR (16 downto 0);
    signal d_i_1_load_9_reg_1594 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_5_fu_786_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_reg_1599 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_10_fu_834_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_reg_1620 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_840_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_reg_1626 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_24_fu_894_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_24_reg_1642 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_fu_929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_reg_1647 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_9_fu_938_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_9_reg_1652 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_fu_948_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_reg_1657 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_12_fu_996_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_reg_1678 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_1002_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_reg_1684 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_fu_1054_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_reg_1700 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_fu_1090_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_reg_1705 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_17_fu_1100_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_17_reg_1710 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_fu_1110_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_reg_1715 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_14_fu_1158_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_reg_1736 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_1164_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_reg_1742 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_fu_1216_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_reg_1748 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_fu_1252_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_reg_1753 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_25_fu_1262_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_25_reg_1758 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_fu_1272_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_reg_1763 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_30_fu_1332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_30_reg_1768 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln69_31_fu_1368_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_31_reg_1773 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal temp_fu_882_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_1042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_1078_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_1204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_fu_1240_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_1320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_1356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_fu_730_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_fu_745_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_fu_808_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_fu_822_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_fu_968_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_fu_982_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_fu_1130_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_fu_1144_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_846_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_852_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_1008_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_1013_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_1170_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_1175_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_1292_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_1297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_fu_726_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_1_fu_741_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_752_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_758_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_8_fu_772_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_764_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_8_fu_772_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_782_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_768_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_782_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln67_2_fu_804_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_3_fu_818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_834_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_840_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_792_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_9_fu_869_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_fu_828_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_2_fu_872_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_10_fu_878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_1_fu_796_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_12_fu_904_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_1_fu_831_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_6_fu_907_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_13_fu_913_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_899_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_14_fu_934_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_858_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_14_fu_934_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_944_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_861_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_944_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln67_4_fu_964_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_5_fu_978_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_996_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_1002_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_2_fu_954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_15_fu_1029_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_2_fu_988_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_10_fu_1032_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_16_fu_1038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_8_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_3_fu_957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_18_fu_1065_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_3_fu_992_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_14_fu_1068_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_19_fu_1074_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_12_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_20_fu_1096_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_1018_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_20_fu_1096_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_1106_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_1021_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_1106_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln67_6_fu_1126_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_7_fu_1140_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_1158_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_1164_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_1116_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_21_fu_1191_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_4_fu_1150_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_18_fu_1194_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_22_fu_1200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_16_fu_1186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_5_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_24_fu_1227_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_5_fu_1154_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_22_fu_1230_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_25_fu_1236_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_20_fu_1222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_26_fu_1258_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_1180_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_26_fu_1258_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_1268_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_1183_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_1268_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_6_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_27_fu_1307_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_6_fu_1284_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_26_fu_1310_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_28_fu_1316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_24_fu_1302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_7_fu_1281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_30_fu_1343_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_7_fu_1288_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_30_fu_1346_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_31_fu_1352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_28_fu_1338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                acc_0 <= temp_fu_882_p2;
                acc_1 <= temp_1_fu_917_p2;
                add_ln67_13_reg_1657 <= add_ln67_13_fu_948_p2;
                add_ln67_9_reg_1652 <= add_ln67_9_fu_938_p2;
                add_ln69_10_reg_1620 <= add_ln69_10_fu_834_p2;
                add_ln69_11_reg_1626 <= add_ln69_11_fu_840_p2;
                add_ln69_24_reg_1642 <= add_ln69_24_fu_894_p2;
                add_ln69_25_reg_1647 <= add_ln69_25_fu_929_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                acc_2 <= temp_2_fu_1042_p2;
                acc_3 <= temp_3_fu_1078_p2;
                add_ln67_17_reg_1710 <= add_ln67_17_fu_1100_p2;
                add_ln67_21_reg_1715 <= add_ln67_21_fu_1110_p2;
                add_ln69_12_reg_1678 <= add_ln69_12_fu_996_p2;
                add_ln69_13_reg_1684 <= add_ln69_13_fu_1002_p2;
                add_ln69_26_reg_1700 <= add_ln69_26_fu_1054_p2;
                add_ln69_27_reg_1705 <= add_ln69_27_fu_1090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                acc_4 <= temp_4_fu_1204_p2;
                acc_5 <= temp_5_fu_1240_p2;
                add_ln67_25_reg_1758 <= add_ln67_25_fu_1262_p2;
                add_ln67_29_reg_1763 <= add_ln67_29_fu_1272_p2;
                add_ln69_14_reg_1736 <= add_ln69_14_fu_1158_p2;
                add_ln69_15_reg_1742 <= add_ln69_15_fu_1164_p2;
                add_ln69_28_reg_1748 <= add_ln69_28_fu_1216_p2;
                add_ln69_29_reg_1753 <= add_ln69_29_fu_1252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                acc_6 <= temp_6_fu_1320_p2;
                acc_7 <= temp_7_fu_1356_p2;
                add_ln69_30_reg_1768 <= add_ln69_30_fu_1332_p2;
                add_ln69_31_reg_1773 <= add_ln69_31_fu_1368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln67_1_reg_1589 <= add_ln67_1_fu_776_p2;
                add_ln67_5_reg_1599 <= add_ln67_5_fu_786_p2;
                add_ln69_8_reg_1557 <= add_ln69_8_fu_752_p2;
                add_ln69_9_reg_1568 <= add_ln69_9_fu_758_p2;
                d_i_0_load_8_reg_1552 <= d_i_0_q1;
                d_i_0_load_9_reg_1563 <= d_i_0_q0;
                d_i_1_load_8_reg_1584 <= d_i_1_q1;
                d_i_1_load_9_reg_1594 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                d_i_0_load_2_reg_1414 <= d_i_0_q1;
                d_i_0_load_3_reg_1420 <= d_i_0_q0;
                d_i_1_load_2_reg_1436 <= d_i_1_q1;
                d_i_1_load_3_reg_1442 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                d_i_0_load_4_reg_1458 <= d_i_0_q1;
                d_i_0_load_5_reg_1464 <= d_i_0_q0;
                d_i_1_load_4_reg_1480 <= d_i_1_q1;
                d_i_1_load_5_reg_1486 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                d_i_0_load_6_reg_1502 <= d_i_0_q1;
                d_i_0_load_7_reg_1508 <= d_i_0_q0;
                d_i_1_load_6_reg_1524 <= d_i_1_q1;
                d_i_1_load_7_reg_1530 <= d_i_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_706 <= d_i_0_q1;
                reg_710 <= d_i_0_q0;
                reg_714 <= d_i_1_q1;
                reg_718 <= d_i_1_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln67_10_fu_1032_p2 <= std_logic_vector(signed(sext_ln67_15_fu_1029_p1) + signed(sext_ln69_2_fu_988_p1));
    add_ln67_12_fu_1060_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(sext_ln67_3_fu_957_p1));
    add_ln67_13_fu_948_p2 <= std_logic_vector(signed(sext_ln69_11_fu_861_p1) + signed(sext_ln67_17_fu_944_p1));
    add_ln67_14_fu_1068_p2 <= std_logic_vector(signed(sext_ln67_18_fu_1065_p1) + signed(sext_ln69_3_fu_992_p1));
    add_ln67_16_fu_1186_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(sext_ln67_4_fu_1116_p1));
    add_ln67_17_fu_1100_p2 <= std_logic_vector(signed(sext_ln69_12_fu_1018_p1) + signed(sext_ln67_20_fu_1096_p1));
    add_ln67_18_fu_1194_p2 <= std_logic_vector(signed(sext_ln67_21_fu_1191_p1) + signed(sext_ln69_4_fu_1150_p1));
    add_ln67_1_fu_776_p2 <= std_logic_vector(signed(sext_ln69_8_fu_764_p1) + signed(sext_ln67_8_fu_772_p1));
    add_ln67_20_fu_1222_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(sext_ln67_5_fu_1119_p1));
    add_ln67_21_fu_1110_p2 <= std_logic_vector(signed(sext_ln69_13_fu_1021_p1) + signed(sext_ln67_23_fu_1106_p1));
    add_ln67_22_fu_1230_p2 <= std_logic_vector(signed(sext_ln67_24_fu_1227_p1) + signed(sext_ln69_5_fu_1154_p1));
    add_ln67_24_fu_1302_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(sext_ln67_6_fu_1278_p1));
    add_ln67_25_fu_1262_p2 <= std_logic_vector(signed(sext_ln69_14_fu_1180_p1) + signed(sext_ln67_26_fu_1258_p1));
    add_ln67_26_fu_1310_p2 <= std_logic_vector(signed(sext_ln67_27_fu_1307_p1) + signed(sext_ln69_6_fu_1284_p1));
    add_ln67_28_fu_1338_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(sext_ln67_7_fu_1281_p1));
    add_ln67_29_fu_1272_p2 <= std_logic_vector(signed(sext_ln69_15_fu_1183_p1) + signed(sext_ln67_29_fu_1268_p1));
    add_ln67_2_fu_872_p2 <= std_logic_vector(signed(sext_ln67_9_fu_869_p1) + signed(sext_ln69_fu_828_p1));
    add_ln67_30_fu_1346_p2 <= std_logic_vector(signed(sext_ln67_30_fu_1343_p1) + signed(sext_ln69_7_fu_1288_p1));
    add_ln67_4_fu_899_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(sext_ln67_1_fu_796_p1));
    add_ln67_5_fu_786_p2 <= std_logic_vector(signed(sext_ln69_9_fu_768_p1) + signed(sext_ln67_11_fu_782_p1));
    add_ln67_6_fu_907_p2 <= std_logic_vector(signed(sext_ln67_12_fu_904_p1) + signed(sext_ln69_1_fu_831_p1));
    add_ln67_8_fu_1024_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(sext_ln67_2_fu_954_p1));
    add_ln67_9_fu_938_p2 <= std_logic_vector(signed(sext_ln69_10_fu_858_p1) + signed(sext_ln67_14_fu_934_p1));
    add_ln67_fu_864_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(sext_ln67_fu_792_p1));
    add_ln69_10_fu_834_p0 <= d_i_0_q1;
    add_ln69_10_fu_834_p2 <= std_logic_vector(signed(add_ln69_10_fu_834_p0) + signed(add_ln69_2_fu_808_p2));
    add_ln69_11_fu_840_p0 <= d_i_0_q0;
    add_ln69_11_fu_840_p2 <= std_logic_vector(signed(add_ln69_11_fu_840_p0) + signed(add_ln69_3_fu_822_p2));
    add_ln69_12_fu_996_p0 <= d_i_0_q1;
    add_ln69_12_fu_996_p2 <= std_logic_vector(signed(add_ln69_12_fu_996_p0) + signed(add_ln69_4_fu_968_p2));
    add_ln69_13_fu_1002_p0 <= d_i_0_q0;
    add_ln69_13_fu_1002_p2 <= std_logic_vector(signed(add_ln69_13_fu_1002_p0) + signed(add_ln69_5_fu_982_p2));
    add_ln69_14_fu_1158_p0 <= d_i_0_q1;
    add_ln69_14_fu_1158_p2 <= std_logic_vector(signed(add_ln69_14_fu_1158_p0) + signed(add_ln69_6_fu_1130_p2));
    add_ln69_15_fu_1164_p0 <= d_i_0_q0;
    add_ln69_15_fu_1164_p2 <= std_logic_vector(signed(add_ln69_15_fu_1164_p0) + signed(add_ln69_7_fu_1144_p2));
    add_ln69_16_fu_846_p2 <= std_logic_vector(signed(reg_714) + signed(add_ln69_8_reg_1557));
    add_ln69_17_fu_852_p2 <= std_logic_vector(signed(reg_718) + signed(add_ln69_9_reg_1568));
    add_ln69_18_fu_1008_p2 <= std_logic_vector(signed(d_i_1_load_2_reg_1436) + signed(add_ln69_10_reg_1620));
    add_ln69_19_fu_1013_p2 <= std_logic_vector(signed(d_i_1_load_3_reg_1442) + signed(add_ln69_11_reg_1626));
    add_ln69_1_fu_745_p2 <= std_logic_vector(signed(reg_710) + signed(trunc_ln67_1_fu_741_p1));
    add_ln69_20_fu_1170_p2 <= std_logic_vector(signed(d_i_1_load_4_reg_1480) + signed(add_ln69_12_reg_1678));
    add_ln69_21_fu_1175_p2 <= std_logic_vector(signed(d_i_1_load_5_reg_1486) + signed(add_ln69_13_reg_1684));
    add_ln69_22_fu_1292_p2 <= std_logic_vector(signed(d_i_1_load_6_reg_1524) + signed(add_ln69_14_reg_1736));
    add_ln69_23_fu_1297_p2 <= std_logic_vector(signed(d_i_1_load_7_reg_1530) + signed(add_ln69_15_reg_1742));
    add_ln69_24_fu_894_p2 <= std_logic_vector(signed(d_i_1_load_8_reg_1584) + signed(add_ln69_16_fu_846_p2));
    add_ln69_25_fu_929_p2 <= std_logic_vector(signed(d_i_1_load_9_reg_1594) + signed(add_ln69_17_fu_852_p2));
    add_ln69_26_fu_1054_p2 <= std_logic_vector(signed(reg_714) + signed(add_ln69_18_fu_1008_p2));
    add_ln69_27_fu_1090_p2 <= std_logic_vector(signed(reg_718) + signed(add_ln69_19_fu_1013_p2));
    add_ln69_28_fu_1216_p2 <= std_logic_vector(signed(reg_714) + signed(add_ln69_20_fu_1170_p2));
    add_ln69_29_fu_1252_p2 <= std_logic_vector(signed(reg_718) + signed(add_ln69_21_fu_1175_p2));
    add_ln69_2_fu_808_p2 <= std_logic_vector(signed(d_i_0_load_2_reg_1414) + signed(trunc_ln67_2_fu_804_p1));
    add_ln69_30_fu_1332_p2 <= std_logic_vector(signed(reg_714) + signed(add_ln69_22_fu_1292_p2));
    add_ln69_31_fu_1368_p2 <= std_logic_vector(signed(reg_718) + signed(add_ln69_23_fu_1297_p2));
    add_ln69_3_fu_822_p2 <= std_logic_vector(signed(d_i_0_load_3_reg_1420) + signed(trunc_ln67_3_fu_818_p1));
    add_ln69_4_fu_968_p2 <= std_logic_vector(signed(d_i_0_load_4_reg_1458) + signed(trunc_ln67_4_fu_964_p1));
    add_ln69_5_fu_982_p2 <= std_logic_vector(signed(d_i_0_load_5_reg_1464) + signed(trunc_ln67_5_fu_978_p1));
    add_ln69_6_fu_1130_p2 <= std_logic_vector(signed(d_i_0_load_6_reg_1502) + signed(trunc_ln67_6_fu_1126_p1));
    add_ln69_7_fu_1144_p2 <= std_logic_vector(signed(d_i_0_load_7_reg_1508) + signed(trunc_ln67_7_fu_1140_p1));
    add_ln69_8_fu_752_p0 <= d_i_0_q1;
    add_ln69_8_fu_752_p2 <= std_logic_vector(signed(add_ln69_8_fu_752_p0) + signed(add_ln69_fu_730_p2));
    add_ln69_9_fu_758_p0 <= d_i_0_q0;
    add_ln69_9_fu_758_p2 <= std_logic_vector(signed(add_ln69_9_fu_758_p0) + signed(add_ln69_1_fu_745_p2));
    add_ln69_fu_730_p2 <= std_logic_vector(signed(reg_706) + signed(trunc_ln67_fu_726_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXXX";
        end if; 
    end process;


    d_i_0_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_0_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_0_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_0_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_0_address1 <= "XXXX";
        end if; 
    end process;


    d_i_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_0_ce1 <= ap_const_logic_1;
        else 
            d_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXXX";
        end if; 
    end process;


    d_i_1_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_i_1_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_i_1_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_i_1_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_1_address1 <= "XXXX";
        end if; 
    end process;


    d_i_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            d_i_1_ce1 <= ap_const_logic_1;
        else 
            d_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_0_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_o_0_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_o_0_address0 <= "XXX";
        end if; 
    end process;


    d_o_0_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_0_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_0_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_o_0_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_o_0_address1 <= "XXX";
        end if; 
    end process;


    d_o_0_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_0_ce0 <= ap_const_logic_1;
        else 
            d_o_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_0_ce1 <= ap_const_logic_1;
        else 
            d_o_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6, add_ln69_1_fu_745_p2, add_ln69_3_fu_822_p2, add_ln69_5_fu_982_p2, add_ln69_7_fu_1144_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_0_d0 <= add_ln69_7_fu_1144_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_0_d0 <= add_ln69_5_fu_982_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_0_d0 <= add_ln69_3_fu_822_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_o_0_d0 <= add_ln69_1_fu_745_p2;
        else 
            d_o_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_d1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6, add_ln69_fu_730_p2, add_ln69_2_fu_808_p2, add_ln69_4_fu_968_p2, add_ln69_6_fu_1130_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_0_d1 <= add_ln69_6_fu_1130_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_0_d1 <= add_ln69_4_fu_968_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_0_d1 <= add_ln69_2_fu_808_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_o_0_d1 <= add_ln69_fu_730_p2;
        else 
            d_o_0_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_we0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_0_we0 <= ap_const_logic_1;
        else 
            d_o_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_we1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_0_we1 <= ap_const_logic_1;
        else 
            d_o_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_1_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_1_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_1_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_1_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_o_1_address0 <= "XXX";
        end if; 
    end process;


    d_o_1_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_1_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_1_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_1_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_1_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_o_1_address1 <= "XXX";
        end if; 
    end process;


    d_o_1_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_1_ce0 <= ap_const_logic_1;
        else 
            d_o_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_1_ce1 <= ap_const_logic_1;
        else 
            d_o_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_9_reg_1568, add_ln69_11_reg_1626, add_ln69_13_reg_1684, add_ln69_15_reg_1742, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_1_d0 <= add_ln69_15_reg_1742;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_1_d0 <= add_ln69_13_reg_1684;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_1_d0 <= add_ln69_11_reg_1626;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_1_d0 <= add_ln69_9_reg_1568;
        else 
            d_o_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_d1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_8_reg_1557, add_ln69_10_reg_1620, add_ln69_12_reg_1678, add_ln69_14_reg_1736, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_1_d1 <= add_ln69_14_reg_1736;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_1_d1 <= add_ln69_12_reg_1678;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_1_d1 <= add_ln69_10_reg_1620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_1_d1 <= add_ln69_8_reg_1557;
        else 
            d_o_1_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_we0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_1_we0 <= ap_const_logic_1;
        else 
            d_o_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_we1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_1_we1 <= ap_const_logic_1;
        else 
            d_o_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_2_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_2_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_2_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_2_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_o_2_address0 <= "XXX";
        end if; 
    end process;


    d_o_2_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_2_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_2_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_2_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_2_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_o_2_address1 <= "XXX";
        end if; 
    end process;


    d_o_2_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_2_ce0 <= ap_const_logic_1;
        else 
            d_o_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_ce1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_2_ce1 <= ap_const_logic_1;
        else 
            d_o_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_17_fu_852_p2, add_ln69_19_fu_1013_p2, add_ln69_21_fu_1175_p2, add_ln69_23_fu_1297_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_2_d0 <= add_ln69_23_fu_1297_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_2_d0 <= add_ln69_21_fu_1175_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_2_d0 <= add_ln69_19_fu_1013_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_2_d0 <= add_ln69_17_fu_852_p2;
        else 
            d_o_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_d1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_16_fu_846_p2, add_ln69_18_fu_1008_p2, add_ln69_20_fu_1170_p2, add_ln69_22_fu_1292_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_2_d1 <= add_ln69_22_fu_1292_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_2_d1 <= add_ln69_20_fu_1170_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_2_d1 <= add_ln69_18_fu_1008_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            d_o_2_d1 <= add_ln69_16_fu_846_p2;
        else 
            d_o_2_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_we0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_2_we0 <= ap_const_logic_1;
        else 
            d_o_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_we1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            d_o_2_we1 <= ap_const_logic_1;
        else 
            d_o_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            d_o_3_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_3_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_3_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_3_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_o_3_address0 <= "XXX";
        end if; 
    end process;


    d_o_3_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            d_o_3_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_3_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_3_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_3_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_o_3_address1 <= "XXX";
        end if; 
    end process;


    d_o_3_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_3_ce0 <= ap_const_logic_1;
        else 
            d_o_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_3_ce1 <= ap_const_logic_1;
        else 
            d_o_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_25_reg_1647, add_ln69_27_reg_1705, add_ln69_29_reg_1753, ap_CS_fsm_state10, add_ln69_31_reg_1773, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            d_o_3_d0 <= add_ln69_31_reg_1773;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_3_d0 <= add_ln69_29_reg_1753;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_3_d0 <= add_ln69_27_reg_1705;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_3_d0 <= add_ln69_25_reg_1647;
        else 
            d_o_3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_d1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, add_ln69_24_reg_1642, add_ln69_26_reg_1700, add_ln69_28_reg_1748, add_ln69_30_reg_1768, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            d_o_3_d1 <= add_ln69_30_reg_1768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            d_o_3_d1 <= add_ln69_28_reg_1748;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            d_o_3_d1 <= add_ln69_26_reg_1700;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            d_o_3_d1 <= add_ln69_24_reg_1642;
        else 
            d_o_3_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_3_we0 <= ap_const_logic_1;
        else 
            d_o_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_we1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            d_o_3_we1 <= ap_const_logic_1;
        else 
            d_o_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln67_10_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_2_fu_872_p2),32));

    sext_ln67_11_fu_782_p0 <= d_i_1_q0;
        sext_ln67_11_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_11_fu_782_p0),17));

        sext_ln67_12_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_5_reg_1599),18));

        sext_ln67_13_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_6_fu_907_p2),32));

    sext_ln67_14_fu_934_p0 <= d_i_1_q1;
        sext_ln67_14_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_14_fu_934_p0),17));

        sext_ln67_15_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_9_reg_1652),18));

        sext_ln67_16_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_10_fu_1032_p2),32));

    sext_ln67_17_fu_944_p0 <= d_i_1_q0;
        sext_ln67_17_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_17_fu_944_p0),17));

        sext_ln67_18_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_13_reg_1657),18));

        sext_ln67_19_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_14_fu_1068_p2),32));

        sext_ln67_1_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_710),32));

    sext_ln67_20_fu_1096_p0 <= d_i_1_q1;
        sext_ln67_20_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_20_fu_1096_p0),17));

        sext_ln67_21_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_17_reg_1710),18));

        sext_ln67_22_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_18_fu_1194_p2),32));

    sext_ln67_23_fu_1106_p0 <= d_i_1_q0;
        sext_ln67_23_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_23_fu_1106_p0),17));

        sext_ln67_24_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_21_reg_1715),18));

        sext_ln67_25_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_22_fu_1230_p2),32));

    sext_ln67_26_fu_1258_p0 <= d_i_1_q1;
        sext_ln67_26_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_26_fu_1258_p0),17));

        sext_ln67_27_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_25_reg_1758),18));

        sext_ln67_28_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_26_fu_1310_p2),32));

    sext_ln67_29_fu_1268_p0 <= d_i_1_q0;
        sext_ln67_29_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_29_fu_1268_p0),17));

        sext_ln67_2_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_2_reg_1414),32));

        sext_ln67_30_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_29_reg_1763),18));

        sext_ln67_31_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_30_fu_1346_p2),32));

        sext_ln67_3_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_3_reg_1420),32));

        sext_ln67_4_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_4_reg_1458),32));

        sext_ln67_5_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_5_reg_1464),32));

        sext_ln67_6_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_6_reg_1502),32));

        sext_ln67_7_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_7_reg_1508),32));

    sext_ln67_8_fu_772_p0 <= d_i_1_q1;
        sext_ln67_8_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_8_fu_772_p0),17));

        sext_ln67_9_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_1_reg_1589),18));

        sext_ln67_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_706),32));

        sext_ln69_10_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_2_reg_1436),17));

        sext_ln69_11_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_3_reg_1442),17));

        sext_ln69_12_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_4_reg_1480),17));

        sext_ln69_13_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_5_reg_1486),17));

        sext_ln69_14_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_6_reg_1524),17));

        sext_ln69_15_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_7_reg_1530),17));

        sext_ln69_1_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_9_reg_1563),18));

        sext_ln69_2_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_706),18));

        sext_ln69_3_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_710),18));

        sext_ln69_4_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_706),18));

        sext_ln69_5_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_710),18));

        sext_ln69_6_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_706),18));

        sext_ln69_7_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_710),18));

        sext_ln69_8_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_714),17));

        sext_ln69_9_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_718),17));

        sext_ln69_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_8_reg_1552),18));

    temp_1_fu_917_p2 <= std_logic_vector(signed(sext_ln67_13_fu_913_p1) + signed(add_ln67_4_fu_899_p2));
    temp_2_fu_1042_p2 <= std_logic_vector(signed(sext_ln67_16_fu_1038_p1) + signed(add_ln67_8_fu_1024_p2));
    temp_3_fu_1078_p2 <= std_logic_vector(signed(sext_ln67_19_fu_1074_p1) + signed(add_ln67_12_fu_1060_p2));
    temp_4_fu_1204_p2 <= std_logic_vector(signed(sext_ln67_22_fu_1200_p1) + signed(add_ln67_16_fu_1186_p2));
    temp_5_fu_1240_p2 <= std_logic_vector(signed(sext_ln67_25_fu_1236_p1) + signed(add_ln67_20_fu_1222_p2));
    temp_6_fu_1320_p2 <= std_logic_vector(signed(sext_ln67_28_fu_1316_p1) + signed(add_ln67_24_fu_1302_p2));
    temp_7_fu_1356_p2 <= std_logic_vector(signed(sext_ln67_31_fu_1352_p1) + signed(add_ln67_28_fu_1338_p2));
    temp_fu_882_p2 <= std_logic_vector(signed(sext_ln67_10_fu_878_p1) + signed(add_ln67_fu_864_p2));
    trunc_ln67_1_fu_741_p1 <= acc_1(16 - 1 downto 0);
    trunc_ln67_2_fu_804_p1 <= acc_2(16 - 1 downto 0);
    trunc_ln67_3_fu_818_p1 <= acc_3(16 - 1 downto 0);
    trunc_ln67_4_fu_964_p1 <= acc_4(16 - 1 downto 0);
    trunc_ln67_5_fu_978_p1 <= acc_5(16 - 1 downto 0);
    trunc_ln67_6_fu_1126_p1 <= acc_6(16 - 1 downto 0);
    trunc_ln67_7_fu_1140_p1 <= acc_7(16 - 1 downto 0);
    trunc_ln67_fu_726_p1 <= acc_0(16 - 1 downto 0);
end behav;
